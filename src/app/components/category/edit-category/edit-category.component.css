/* This component can reuse the exact same CSS file as add-category.component.css */
/* Add this specific style for the title ID */
.title-id {
  font-size: 1.2rem;
  font-weight: var(--font-weight-medium);
  color: var(--subtle-text-color);
  margin-left: 0.5rem;
}

/* Paste all CSS from add-category.component.css below this line */
:host { display: block; background-color: var(--bg-color); }
.container { max-width: 900px; margin: 2rem auto; padding: 2rem; font-family: var(--font-family-base); }
.header { display: flex; justify-content: space-between; align-items: center; padding-bottom: 1.5rem; border-bottom: 1px solid var(--border-color); margin-bottom: 2.5rem; }
.header-content { display: flex; align-items: center; gap: 1rem; }
.header-icon { font-size: 2rem; color: var(--primary-accent); }
.header-title { font-size: 1.75rem; font-weight: var(--font-weight-bold); margin: 0; }
.btn { display: inline-flex; align-items: center; gap: 0.5rem; padding: 0.65rem 1.25rem; font-size: 0.9rem; font-weight: var(--font-weight-semibold); border-radius: var(--border-radius-base); border: 1px solid transparent; cursor: pointer; transition: all var(--transition-speed-fast) ease; }
.btn:disabled { opacity: 0.6; cursor: not-allowed; }
.btn-primary { background-color: var(--primary-accent); color: var(--bg-color); }
.btn-primary:not(:disabled):hover { background-color: var(--primary-accent-hover); transform: translateY(-2px); }
.btn-secondary { background-color: transparent; color: var(--primary-accent); border-color: var(--border-color); }
.btn-secondary:not(:disabled):hover { background-color: var(--primary-accent-translucent); border-color: var(--primary-accent); }
.form-container { background-color: var(--surface-color); border: 1px solid var(--border-color-translucent); border-radius: var(--border-radius-large); padding: 2.5rem; animation: fadeIn 0.6s ease; }
.category-form { display: flex; flex-direction: column; gap: 1.5rem; }
.form-group { display: flex; flex-direction: column; }
.form-group label { font-size: 0.95rem; color: var(--subtle-text-color); margin-bottom: 0.5rem; font-weight: var(--font-weight-medium); }
.form-input { width: 100%; padding: 0.75rem 1rem; background-color: var(--bg-color); border: 1px solid var(--border-color); border-radius: var(--border-radius-base); color: var(--text-color); font-size: 1rem; transition: all var(--transition-speed-fast) ease; }
.form-input:focus { outline: none; border-color: var(--primary-accent); box-shadow: 0 0 0 3px var(--primary-accent-translucent); }
.form-input.ng-invalid.ng-touched { border-color: var(--error-color); }
.error-text { color: var(--error-color); font-size: 0.85rem; margin-top: 0.5rem; }
.success-message, .form-error-box { display: flex; align-items: center; gap: 0.75rem; padding: 1rem; border-radius: var(--border-radius-base); font-weight: var(--font-weight-semibold); margin-top: 1rem; border: 1px solid; }
.success-message { background-color: var(--primary-accent-translucent); color: var(--primary-accent); border-color: var(--primary-accent); }
.form-error-box { background-color: rgba(248, 81, 73, 0.08); color: var(--error-color); border-color: var(--error-color); }
.form-actions { display: flex; justify-content: flex-end; gap: 1rem; margin-top: 1.5rem; padding-top: 1.5rem; border-top: 1px solid var(--border-color); }
.state-container { display: flex; flex-direction: column; align-items: center; justify-content: center; padding: 4rem 2rem; text-align: center; border: 2px dashed var(--border-color); border-radius: var(--border-radius-large); background-color: var(--surface-color); }
.state-container i { font-size: 2.8rem; margin-bottom: 1.2rem; }
.spinner { width: 45px; height: 45px; border: 5px solid var(--primary-accent-translucent); border-top-color: var(--primary-accent); border-radius: 50%; animation: spin 0.8s linear infinite; margin-bottom: 1.5rem; }
@keyframes fadeIn { from { opacity: 0; } to { opacity: 1; } }
@keyframes spin { to { transform: rotate(360deg); } }
